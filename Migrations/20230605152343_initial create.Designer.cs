// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using vassago.Models;

#nullable disable

namespace vassago.Migrations
{
    [DbContext(typeof(ChattingContext))]
    [Migration("20230605152343_initial create")]
    partial class initialcreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ChannelUser", b =>
                {
                    b.Property<Guid>("OtherUsersId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SeenInChannelsId")
                        .HasColumnType("uuid");

                    b.HasKey("OtherUsersId", "SeenInChannelsId");

                    b.HasIndex("SeenInChannelsId");

                    b.ToTable("ChannelUser");
                });

            modelBuilder.Entity("vassago.Models.Attachment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte[]>("Content")
                        .HasColumnType("bytea");

                    b.Property<string>("ContentType")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<decimal?>("ExternalId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Filename")
                        .HasColumnType("text");

                    b.Property<Guid?>("MessageId")
                        .HasColumnType("uuid");

                    b.Property<int>("Size")
                        .HasColumnType("integer");

                    b.Property<string>("Source")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("MessageId");

                    b.ToTable("Attachments");
                });

            modelBuilder.Entity("vassago.Models.Channel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DisplayName")
                        .HasColumnType("text");

                    b.Property<decimal?>("ExternalId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<bool>("IsDM")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("ParentChannelId")
                        .HasColumnType("uuid");

                    b.Property<int?>("PermissionsOverridesId")
                        .HasColumnType("integer");

                    b.Property<Guid?>("ProtocolId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ParentChannelId");

                    b.HasIndex("PermissionsOverridesId");

                    b.HasIndex("ProtocolId");

                    b.ToTable("Channels");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Channel");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("vassago.Models.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("ActedOn")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("AuthorId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ChannelId")
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<decimal?>("ExternalId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<bool>("MentionsMe")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("ChannelId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("vassago.Models.PermissionSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("LewdnessFilterLevel")
                        .HasColumnType("integer");

                    b.Property<bool?>("LinksAllowed")
                        .HasColumnType("boolean");

                    b.Property<long?>("MaxAttachmentBytes")
                        .HasColumnType("bigint");

                    b.Property<long?>("MaxTextChars")
                        .HasColumnType("bigint");

                    b.Property<int?>("MeannessFilterLevel")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("PermissionSettings");
                });

            modelBuilder.Entity("vassago.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal?>("ExternalId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<bool>("IsBot")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("ProtocolId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uuid");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProtocolId");

                    b.HasIndex("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("vassago.Models.Protocol", b =>
                {
                    b.HasBaseType("vassago.Models.Channel");

                    b.Property<string>("ConnectionToken")
                        .HasColumnType("text");

                    b.HasDiscriminator().HasValue("Protocol");
                });

            modelBuilder.Entity("ChannelUser", b =>
                {
                    b.HasOne("vassago.Models.User", null)
                        .WithMany()
                        .HasForeignKey("OtherUsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vassago.Models.Channel", null)
                        .WithMany()
                        .HasForeignKey("SeenInChannelsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("vassago.Models.Attachment", b =>
                {
                    b.HasOne("vassago.Models.Message", "Message")
                        .WithMany("Attachments")
                        .HasForeignKey("MessageId");

                    b.Navigation("Message");
                });

            modelBuilder.Entity("vassago.Models.Channel", b =>
                {
                    b.HasOne("vassago.Models.Channel", "ParentChannel")
                        .WithMany("SubChannels")
                        .HasForeignKey("ParentChannelId");

                    b.HasOne("vassago.Models.PermissionSettings", "PermissionsOverrides")
                        .WithMany()
                        .HasForeignKey("PermissionsOverridesId");

                    b.HasOne("vassago.Models.Protocol", "Protocol")
                        .WithMany()
                        .HasForeignKey("ProtocolId");

                    b.Navigation("ParentChannel");

                    b.Navigation("PermissionsOverrides");

                    b.Navigation("Protocol");
                });

            modelBuilder.Entity("vassago.Models.Message", b =>
                {
                    b.HasOne("vassago.Models.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId");

                    b.HasOne("vassago.Models.Channel", "Channel")
                        .WithMany("Messages")
                        .HasForeignKey("ChannelId");

                    b.Navigation("Author");

                    b.Navigation("Channel");
                });

            modelBuilder.Entity("vassago.Models.User", b =>
                {
                    b.HasOne("vassago.Models.Protocol", "Protocol")
                        .WithMany()
                        .HasForeignKey("ProtocolId");

                    b.HasOne("vassago.Models.User", null)
                        .WithMany("KnownAliases")
                        .HasForeignKey("UserId");

                    b.Navigation("Protocol");
                });

            modelBuilder.Entity("vassago.Models.Channel", b =>
                {
                    b.Navigation("Messages");

                    b.Navigation("SubChannels");
                });

            modelBuilder.Entity("vassago.Models.Message", b =>
                {
                    b.Navigation("Attachments");
                });

            modelBuilder.Entity("vassago.Models.User", b =>
                {
                    b.Navigation("KnownAliases");
                });
#pragma warning restore 612, 618
        }
    }
}
