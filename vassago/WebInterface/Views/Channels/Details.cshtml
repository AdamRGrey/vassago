@using System.ComponentModel
@using Newtonsoft.Json
@using System.Text; 
@model Tuple<Channel, Enumerations.LewdnessFilterLevel?, Enumerations.MeannessFilterLevel?>
@{
  var ThisChannel = Model.Item1;
  var IfInheritedLewdnessFilterLevel = Model.Item2 ?? ThisChannel.LewdnessFilterLevel ?? Enumerations.LewdnessFilterLevel.Strict;
  var IfInheritedMeannessFilterLevel = Model.Item3 ?? ThisChannel.MeannessFilterLevel ?? Enumerations.MeannessFilterLevel.Strict;
}

<a href="/">home</a>/
@Html.Raw(ViewData["breadcrumbs"])

<form action="@Url.Action("submit", "Channels")" method="post" id="theForm">
  <input type="hidden" name="Id" value="@ThisChannel.Id">
  <table class="table">
    <tbody>
      <tr>
        <th scope="row">Display Name</th>
        <td>@ThisChannel.DisplayName</td>
      </tr>
      <tr>
        <th scope="row">Channel type</th>
        <td>@(Enumerations.GetDescription(ThisChannel.ChannelType))</td>
      </tr>
      <tr>
        <th scope="row">Lewdness Filter Level</th>
        <td>
          <select name="LewdnessFilterLevel" id="LewdnessFilterLevel">
            <!option value="" @(ThisChannel.LewdnessFilterLevel == null ? "selected" : "")>⤵ inherited - @Enumerations.GetDescription(IfInheritedLewdnessFilterLevel)</!option>
            @foreach (Enumerations.LewdnessFilterLevel enumVal in
            Enum.GetValues(typeof(Enumerations.LewdnessFilterLevel)))
            {
              <!option value="@((int)enumVal)" @(ThisChannel.LewdnessFilterLevel == enumVal ? "selected" : "")>
                @(Enumerations.GetDescription<Enumerations.LewdnessFilterLevel>(enumVal))</!option>
            }
          </select>
        </td>
      </tr>
      <tr>
        <th scope="row">Links Allowed</th>
        <td>@(ThisChannel.LinksAllowed?.ToString() ?? "unknown")</td>
      </tr>
      <tr>
        <th scope="row">Lineage summary</th>
        <td>@ThisChannel.LineageSummary</td>
      </tr>
      <tr>
        <th scope="row">max attachment bytes</th>
        <td>@ThisChannel.MaxAttachmentBytes</td>
      </tr>
      <tr>
        <th scope="row">max message length</th>
        <td>@(ThisChannel.MaxTextChars?.ToString() ?? "inherited")</td>
      </tr>
      <tr>
        <th scope="row">Meanness Filter Level</th>
        <td>
          <select name="MeannessFilterLevel" id="MeannessFilterLevel" onchange="patchThisChannel.jsonifyChannel())">
            <!option value="" @(ThisChannel.MeannessFilterLevel == null ? "selected" : "")>⤵ inherited - @Enumerations.GetDescription(IfInheritedMeannessFilterLevel)</!option>
            @foreach (Enumerations.MeannessFilterLevel enumVal in
            Enum.GetValues(typeof(Enumerations.MeannessFilterLevel)))
            {
              <!option value="@((int)enumVal)" @(ThisChannel.MeannessFilterLevel == enumVal ? "selected" : "")>
                @(Enumerations.GetDescription<Enumerations.MeannessFilterLevel>(enumVal))</!option>
            }
          </select>
        </td>
      </tr>
      <tr>
        <th scope="row">Messages (count)</th>
        <td>@(ThisChannel.Messages?.Count ?? 0)</td>
      </tr>
      <tr>
        <th scope="row">Protocol</th>
        <td>@ThisChannel.Protocol</td>
      </tr>
      <tr>
        <th scope="row">Reactions Possible</th>
        <td>@(ThisChannel.ReactionsPossible?.ToString() ?? "inherited")</td>
      </tr>
      <tr>
        <th rowspan="@((ThisChannel.SubChannels?.Count ?? 0) + 1)" scope="row">Sub Channels - (@(ThisChannel.SubChannels?.Count ??0))</th>
      </tr>
        @if(ThisChannel.SubChannels != null) foreach(var ch in ThisChannel.SubChannels.OrderBy(c => c.LineageSummary))
        {
          <tr>
            <td>
              <a href="@Url.Action("Details", "Channels", new {Id = ch.Id})">@ch.LineageSummary</a>
            </td>
          </tr>
        }
      <tr>
        <th rowspan="@((ThisChannel.Users?.Count ?? 0) + 1)" scope="row">Accounts</th>
      </tr>
      @if(ThisChannel.Users!= null) foreach(var usr in ThisChannel.Users.OrderBy(u => u.DisplayName))
      {
        <tr>
          <td>
            <a href="@Url.Action("Details", "Users", new {Id = usr.Id})">@usr.DisplayName</a>
          </td>
        </tr>
      }
      <tr>
        <th rowspan="@((ThisChannel.UACs?.Count ?? 0) + 1)" scope="row">UACs</th>
        <td>
          <button type="button" class="btn btn-success" onclick="newUAC.submit()">new</button>
        </td>
      </tr>
      @if(ThisChannel.UACs!= null) foreach(var uac in ThisChannel.UACs.OrderBy(c => c.DisplayName))
      {
        <tr>
          <td>
            <a href="@Url.Action("Details", "UACs", new {Id = uac.Id})">@uac.DisplayName</a>
            <button type="button" class="btn btn-danger" onclick="uacUnlink_@(uac.Id.ToString().Replace('-', '_')).submit();">Unlink</button>
          </td>
        </tr>
      }
      <tr>
        <td colspan="2" align="center">
          <button type="submit" class="btn btn-success">save</button>
        </td>
      </tr>
    </tbody>
  </table>
</form>
@if(ThisChannel.UACs!= null) foreach(var uac in ThisChannel.UACs)
{
    <form action="@Url.Action("UnlinkUAC", "Channels")" method="post" id="uacUnlink_@(uac.Id.ToString().Replace('-', '_'))">
        <input type="hidden" name="ChannelId" value="@ThisChannel.Id">
        <input type="hidden" name="UACId" value="@uac.Id">
    </form>
}
<form action="@Url.Action("NewUAC", "Channels")" method="post" id="newUAC">
    <input type="hidden" name="Id" value="@ThisChannel.Id">
</form>
